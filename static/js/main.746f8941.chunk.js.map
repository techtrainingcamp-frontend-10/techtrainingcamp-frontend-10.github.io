{"version":3,"sources":["views/Home/Top/index.module.scss","components/LivePlayer/Top/index.module.scss","utils/request/index.ts","components/Player/index.tsx","components/VideoPlayer/index.tsx","views/Home/Top/index.tsx","views/Home/index.tsx","api/video.ts","components/LivePlayer/Top/index.tsx","components/LivePlayer/index.tsx","views/Live/index.tsx","api/live.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","http","defaults","baseURL","process","interceptors","request","use","config","error","Promise","reject","response","Player","player","this","props","type","XGPlayer","id","width","window","innerWidth","height","innerHeight","url","autoplay","videoInit","ignores","HlsPlayer","controls","console","log","className","classNames","React","Component","VideoPlayer","video","Top","styles","top","left","to","middle","navbar","right","Home","state","videoList","get","res","setState","data","LivePlayer","Live","liveList","live","BasicExample","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.746f8941.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"top\":\"Top_top__2SUpi\",\"middle\":\"Top_middle__3q9H9\",\"navbar\":\"Top_navbar__3WGJx\",\"navbar-item\":\"Top_navbar-item__2ttu1\",\"navbar-item-active\":\"Top_navbar-item-active__1lry4\",\"right\":\"Top_right__2enh6\",\"search-btn\":\"Top_search-btn__1BQUW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"top\":\"Top_top__2Q1jJ\",\"right\":\"Top_right__1kyh_\",\"close-btn\":\"Top_close-btn__kLbgi\"};","import http from 'axios'\n\nhttp.defaults.baseURL = process.env.REACT_APP_API\n\nif (process.env.NODE_ENV === 'development') {\n  require('../../mock/api')\n}\n\n// 请求拦截器\nhttp.interceptors.request.use(function (config) {\n  return config\n}, function (error) {\n  return Promise.reject(error)\n})\n\n// 响应拦截器\nhttp.interceptors.response.use(function (response) {\n  return response\n}, function (error) {\n  return Promise.reject(error)\n})\n\nexport default http\n","import React from 'react'\nimport XGPlayer from 'xgplayer'\nimport HlsPlayer from 'xgplayer-hls'\nimport './index.scss'\nimport classNames from 'classnames'\n\ninterface IProps {\n  type: 'video'|'live';\n  url: string;\n}\n\nclass Player extends React.Component<IProps> {\n  componentDidMount () {\n    let player\n\n    if (this.props.type === 'video') {\n      player = new XGPlayer({\n        id: 'mse',\n        width: window.innerWidth,\n        height: window.innerHeight,\n        url: this.props.url,\n        autoplay: true,\n        videoInit: true,\n        ignores: ['time', 'definition', 'error', 'fullscreen', 'i18n', 'pc', 'play', 'replay', 'volume']\n      })\n    } else if (this.props.type === 'live') {\n      player = new HlsPlayer({\n        id: 'mse',\n        width: window.innerWidth,\n        height: window.innerHeight,\n        url: this.props.url,\n        autoplay: true,\n        videoInit: true,\n        controls: false,\n        ignores: ['time', 'definition', 'error', 'fullscreen', 'i18n', 'loading', 'mobile', 'pc', 'play', 'poster', 'progress', 'replay', 'volume']\n      })\n    }\n\n    console.log(player)\n  }\n\n  render () {\n    const { type } = this.props\n    return (\n      <div className={classNames('player', { 'player-video': type === 'video', 'player-live': type === 'live' })}>\n        <div id='mse' />\n      </div>\n    )\n  }\n}\n\nexport default Player\n","import React from 'react'\nimport './index.scss'\nimport Player from '../Player'\nimport { IVideo } from '../../types/video'\n\ninterface IProps {\n  video: IVideo;\n}\n\ninterface IState {\n}\n\nclass VideoPlayer extends React.Component<IProps, IState> {\n  render () {\n    const { url } = this.props.video\n\n    return (\n      <div className='video'>\n        <Player url={url} type='video' />\n      </div>\n    )\n  }\n}\n\nexport default VideoPlayer\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styles from './index.module.scss'\n\ninterface IProps {\n}\n\ninterface IState {\n}\n\nclass Top extends React.Component<IProps, IState> {\n  render () {\n    return (\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <Link to='/live'>\n            <div className='live-btn'>直播</div>\n          </Link>\n        </div>\n        <div className={styles.middle}>\n          <div className={styles.navbar}>\n            <div className={styles['navbar-item']}>同城</div>\n            <div className={styles['navbar-item']}>关注</div>\n            <div className={`${styles['navbar-item']} ${styles['navbar-item-active']}`}>推荐</div>\n          </div>\n        </div>\n        <div className={styles.right}>\n          <div className={styles['search-btn']} />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Top\n","import React from 'react'\n// import { Link } from 'react-router-dom'\nimport { getVideoList } from '../../api/video'\nimport VideoPlayer from '../../components/VideoPlayer'\nimport { IVideo } from '../../types/video'\nimport Top from './Top'\nimport './index.scss'\n\ninterface IProps {\n}\n\ninterface IState {\n  videoList: Array<IVideo>;\n}\n\nclass Home extends React.Component<IProps, IState> {\n  constructor (props: IProps) {\n    super(props)\n\n    this.state = {\n      videoList: []\n    }\n  }\n\n  async componentDidMount () {\n    try {\n      const res = await getVideoList()\n      console.log(res)\n      this.setState({\n        videoList: res.data.videoList\n      })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  render () {\n    const video = this.state.videoList[0]\n\n    return (\n      <div className='home'>\n        <Top />\n        {video && <VideoPlayer video={video} />}\n      </div>\n    )\n  }\n}\n\nexport default Home\n","import request from '../utils/request'\n\nexport const getVideoList = () => {\n  return request.get('/getVideoList')\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styles from './index.module.scss'\n\ninterface IProps {\n}\n\ninterface IState {\n}\n\nclass Top extends React.Component<IProps, IState> {\n  render () {\n    return (\n      <div className={styles.top}>\n        <div className={styles.left} />\n        <div className={styles.middle} />\n        <div className={styles.right}>\n          <Link to='/'>\n            <div className={styles['close-btn']} />\n          </Link>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Top\n","import React from 'react'\nimport './index.scss'\nimport Player from '../Player'\nimport { IVideo } from '../../types/video'\nimport Top from './Top'\n\ninterface IProps {\n  video: IVideo;\n}\n\ninterface IState {\n}\n\nclass LivePlayer extends React.Component<IProps, IState> {\n  render () {\n    const { url } = this.props.video\n\n    return (\n      <div className='live'>\n        <Top />\n        <Player url={url} type='live' />\n      </div>\n    )\n  }\n}\n\nexport default LivePlayer\n","import React from 'react'\nimport { getLiveList } from '../../api/live'\nimport LivePlayer from '../../components/LivePlayer'\nimport { IVideo } from '../../types/video'\n\ninterface IProps {\n}\n\ninterface IState {\n  liveList: Array<IVideo>;\n}\n\nclass Live extends React.Component<IProps, IState> {\n  constructor (props: IProps) {\n    super(props)\n\n    this.state = {\n      liveList: []\n    }\n  }\n\n  async componentDidMount () {\n    try {\n      const res = await getLiveList()\n      console.log(res)\n      this.setState({\n        liveList: res.data.liveList\n      })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  render () {\n    const live = this.state.liveList[0]\n\n    return (\n      <div className='live'>\n        {live && <LivePlayer video={live} />}\n      </div>\n    )\n  }\n}\n\nexport default Live\n","import request from '../utils/request'\n\nexport const getLiveList = () => {\n  return request.get('/getLiveList')\n}\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom'\n\nimport Home from './views/Home/index'\nimport Live from './views/Live/index'\n\n// This site has 3 pages, all of which are rendered\n// dynamically in the browser (not server rendered).\n//\n// Although the page does not ever refresh, notice how\n// React Router keeps the URL up to date as you navigate\n// through the site. This preserves the browser history,\n// making sure things like the back button and bookmarks\n// work properly.\n\nexport default function BasicExample () {\n  return (\n    <Router>\n      <div>\n        {/*\n          A <Switch> looks through all its children <Route>\n          elements and renders the first one whose path\n          matches the current URL. Use a <Switch> any time\n          you have multiple routes, but you want only one\n          of them to render at a time\n        */}\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route path='/live' component={Live} />\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}